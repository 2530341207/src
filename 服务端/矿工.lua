---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Admin.
--- DateTime: 2019/12/27 12:15
---
--
--**注意事项**
--武器升级规则定义.
--**注意事项**
--
local use_player = ""
local tForgeRule =
{
    PayGold = 100000,			--需要支付10WG币
    PayOre = 					--需要支付矿石
    {
        Type = 5,				--矿石类型
        SubType = 0,			--矿石子类型
        Puritys = 				--不同矿石纯度贡献值
        {
            黑铁矿石1 = 1,
            黑铁矿石2 = 1,
            黑铁矿石3 = 1,
            黑铁矿石4 = 1,
            黑铁矿石5 = 1,
            黑铁矿石6 = 1,
            黑铁矿石7 = 1,
            黑铁矿石8 = 1,
            黑铁矿石9 = 1,
            黑铁矿石10 = 10,
            黑铁矿石11 = 11,
            黑铁矿石12 = 12,
            黑铁矿石13 = 13,
            黑铁矿石14 = 14,
            黑铁矿石15 = 15,
            黑铁矿石16 = 16,
            黑铁矿石17 = 17,
            黑铁矿石18 = 18,
            黑铁矿石19 = 19,
            黑铁矿石20 = 20
        },
        DurabilityRate = 15,  --耐久基准阀值15,暂定公式:最终当前耐久 = 当前耐久 * (当前纯度 / (DurabilityRate * 升级次数));
    },
    PayItem =				  --需要支付首饰
    {
        Types = {1, 1, 1},	  --支付物品 {1, 3}=手镯
        SubTypes = {3, 8, 9},
        AttrRate = 80,		  --首饰的属性总和阀值80,暂定公式:最终最大总和 = (装备最大攻击 * AttrRate) + 升级次数;
    },
    ForgeItem =
    {
        ForgeLevel = 8,		  --最多升级8次
        ForgeRate = {		  --升级基准阀值(0-10000),暂定公式:最终成功概率 = 当前成功率概 + (当前成功率概 * (当前纯度 / (DurabilityRate * 升级次数)) / 10);
            5500, --如:第一次强化放入3个15级黑矿,则成功概率= 8000 + (8000 * (45 / (15 * 1)) / 10) = 10400 = 100%
            4500, --如:第二次强化放入3个15级黑矿,则成功概率= 6000 + (6000 * (45 / (15 * 2)) / 10) = 6900 = 69%
            3200, --如:第三次强化放入3个15级黑矿,则成功概率= 5000 + (5000 * (45 / (15 * 3)) / 10) = 5500 = 55%
            2000,
            1500,
            1000,
            500, --如:第7次强化放入10个15级黑矿,则成功概率= 1000 + (1000 * (150 / (15 * 7)) / 10) = 1142 = %11.4
            0	  --如:第8次永远为0
        },
        ForgeInc = 1,	      --增量,一次最大攻击涨一点
        ForgeCD = 20*60	  --升级CD一小时  20*60
    }
}

-------------------------------------------------------------------------------

--
--**注意事项**
--武器升级变量定义.写数据库的变量,开服前定好.以后就不要改动了.
--如因改动造成数据异常,尝试删除升级的物品,然后清除玩家"ForgeTick", "ForgeItem"二个变量.
--**注意事项**
--
local tForgeVar =
{
    ItemFlag = 0,			--升级标记 0 = 未走升级流程 1 = 开始升级流程 2 = 结束升级流程
    ItemVar =
    {
        ForgeFlag = 0,		--升级成功或失败先存物品变量中,暂不告诉玩家结果
        ForgeLevel = 1,		--装备的升级等级
        ForgeAttrName = 0,  --如升级成功,要强化的属性名
        ForgeAttrValue = 0, --如升级成功,要强化的属性值
        ForgeDurability = 0,--如升级成功,要生成的耐久值
        ForgeItems = {},	--强化待删除的物品GUID
    }
}

-------------------------------------------------------------------------------

local CForgeMgr =
{
    ForgeTick = "ForgeTick",--玩家变量记录当前正在升级的物品提交时间:秒
    ForgeItem = "ForgeItem",--玩家变量记录当前正在升级的物品json串,同一时刻只能升级一个道具
}

function CForgeMgr:SetWeapon(strPlayer, strJson)
    lualib:SetStr(strPlayer, self.ForgeItem, strJson);
    lualib:SetInt(strPlayer, self.ForgeTick, lualib:GetAllTime());
end

function CForgeMgr:ClearWeapon(strPlayer)
    lualib:SetStr(strPlayer, self.ForgeItem, "");
    lualib:SetInt(strPlayer, self.ForgeTick, 0);
end

function CForgeMgr:WatchWeapon(strPlayer)
    lualib:AddTrigger(strPlayer, lua_trigger_post_equip, "OnPostEquip");
    lualib:AddTrigger(strPlayer, lua_trigger_post_un_equip, "OnPostUnEquip");

    local strWeapon = lualib:Item_GetBySite(strPlayer, 1);
    local tVar = CForgeMgr:GetForgeVar(strWeapon);
    if tVar.ItemFlag == 2 then							--玩家刚上线就穿着未开锋武器?
        lualib:AddTrigger(strPlayer, lua_trigger_spell, "OnSpell");
        lualib:SysMsg_SendTriggerMsg(strPlayer, "你装备了未开锋武器!");
    end
end

function CForgeMgr:OnPostEquip(strPlayer, strWeapon)
    if lualib:Item_GetSubType("", strWeapon) ~= 1 then	--不是武器就不关心了
        return;
    end

    local tVar = CForgeMgr:GetForgeVar(strWeapon);
    if tVar.ItemFlag ~= 2 then
        return;
    end

    lualib:AddTrigger(strPlayer, lua_trigger_spell, "OnSpell");
    lualib:SysMsg_SendTriggerMsg(strPlayer, "你装备了未开锋武器!");
end

function CForgeMgr:OnPostUnEquip(strPlayer, strWeapon)
    if lualib:Item_GetSubType("", strWeapon) ~= 1 then	--不是武器就不关心了
        return;
    end

    local tVar = CForgeMgr:GetForgeVar(strWeapon);
    if tVar.ItemFlag ~= 2 then
        return;
    end

    lualib:RemoveTrigger(strPlayer, lua_trigger_spell, "OnSpell");
    lualib:SysMsg_SendTriggerMsg(strPlayer, "你脱下了未开锋武器!");
end

function CForgeMgr:OnSpell(strPlayer)
    local strWeapon = lualib:Item_GetBySite(strPlayer, 1);

    local tVar = CForgeMgr:GetForgeVar(strWeapon);
    assert(tVar.ItemFlag == 2, "系统错误,逻辑异常!");

    self:DoForgeWeapon(strPlayer, strWeapon, tVar);
    self:SetForgeVar(strWeapon, tVar);

    lualib:RemoveTrigger(strPlayer, lua_trigger_spell, "OnSpell");
end

function CForgeMgr:IsGoldEnough(strPlayer)
    local tRule = tForgeRule;

    return lualib:Player_IsGoldEnough(strPlayer, tRule.PayGold, false);
end

function CForgeMgr:SubGold(strPlayer)
    local tRule = tForgeRule;

    return lualib:Player_SubGold(strPlayer, tRule.PayGold, false, "武器升级扣钱3W", "武器升级NPC");
end

function CForgeMgr:DestroyForgeItem(strPlayer, tVar)
    --删除物品(至少要有一个首饰一个黑铁矿,不然BUG了)
    assert(#tVar.ItemVar.ForgeItems >= 2, "系统错误,升级待删除物品数据异常!");

    for k, v in ipairs(tVar.ItemVar.ForgeItems) do
        if not lualib:Item_Destroy("", v, "武器升级删除首饰和黑铁矿", "武器升级NPC") then
            return false;
        end
    end

    tVar.ItemVar.ForgeItems = {};
    return true;
end

function CForgeMgr:IsBegin(strPlayer)
    return 0 ~= lualib:GetInt(strPlayer, self.ForgeTick);
end

function CForgeMgr:GetRemain(strPlayer)
    local tRule = tForgeRule;

    return lualib:GetInt(strPlayer, self.ForgeTick) + tRule.ForgeItem.ForgeCD - lualib:GetAllTime();
end

function CForgeMgr:GetWeapon(strPlayer)
    local strWeapon = lualib:Item_GetBySite(strPlayer, 1); 	--判断武器
    return strWeapon, lualib:KeyName(strWeapon);
end

function CForgeMgr:ForgeWeapon(strPlayer, strWeapon)
    local strJson = lualib:Item2Json(strWeapon);
    assert(strJson ~= "", "系统错误,物品流化失败.");
    assert(lualib:Item_Destroy("", strWeapon, "武器升级流化物器为json", "武器升级NPC"), "系统错误,物品删除失败!");
    return strJson;
end

function CForgeMgr:MakeWeapon(strPlayer)
    local strJson = lualib:GetStr(strPlayer, self.ForgeItem);
    assert(strJson ~= "", "系统错误,物品信息数据异常!");

    local strItem = lualib:Json2Item(strPlayer, strJson);
    assert (strItem ~= "" and strItem ~= "0", "系统错误,物品反流化失败.");

    local strName = lualib:Name(strItem);
    lualib:Item_ChangeName("", strItem, "(*)"..strName);

    return strItem;
end

local wuqi_tb = {
    ["裁决之杖"] = {1,1,3,"裁决之杖2"},
    ["裁决之杖2"] = {1,1,5,"裁决之杖3"},
    ["裁决之杖3"] = {1,1,7,"裁决之杖4"},
    ["骨玉权杖"] = {2,1,3,"骨玉权杖2"},
    ["骨玉权杖2"] = {2,1,5,"骨玉权杖3"},
    ["骨玉权杖3"] = {2,1,7,"骨玉权杖4"},
    ["龙纹剑"] = {3,1,3,"龙纹剑2"},
    ["龙纹剑2"] = {3,1,5,"龙纹剑3"},
    ["龙纹剑3"] = {3,1,7,"龙纹剑4"},
    ["命运之刃战25"] = {1,1,3,"命运之刃11"},
    ["命运之刃11"] = {1,1,5,"命运之刃12"},
    ["命运之刃12"] = {1,1,7,"命运之刃13"},
    ["命运之刃道25"] = {1,1,3,"命运之刃21"},
    ["命运之刃21"] = {1,1,5,"命运之刃22"},
    ["命运之刃22"] = {1,1,7,"命运之刃23"},
    ["命运之刃法25"] = {1,1,3,"命运之刃31"},
    ["命运之刃31"] = {1,1,5,"命运之刃32"},
    ["命运之刃32"] = {1,1,7,"命运之刃33"},
    ["命运之刃战30"] = {1,1,3,"命运之刃41"},
    ["命运之刃41"] = {1,1,5,"命运之刃42"},
    ["命运之刃42"] = {1,1,7,"命运之刃43"},
    ["命运之刃法30"] = {1,1,3,"命运之刃51"},
    ["命运之刃51"] = {1,1,5,"命运之刃52"},
    ["命运之刃52"] = {1,1,7,"命运之刃53"},
    ["命运之刃道30"] = {1,1,3,"命运之刃61"},
    ["命运之刃61"] = {1,1,5,"命运之刃62"},
    ["命运之刃62"] = {1,1,7,"命运之刃63"},
    ["命运之刃战35"] = {1,1,3,"命运之刃71"},
    ["命运之刃71"] = {1,1,5,"命运之刃72"},
    ["命运之刃72"] = {1,1,7,"命运之刃73"},
    ["命运之刃法35"] = {1,1,3,"命运之刃81"},
    ["命运之刃81"] = {1,1,5,"命运之刃82"},
    ["命运之刃82"] = {1,1,7,"命运之刃83"},
    ["命运之刃道35"] = {1,1,3,"命运之刃91"},
    ["命运之刃91"] = {1,1,5,"命运之刃92"},
    ["命运之刃92"] = {1,1,7,"命运之刃93"},
}

local xunzhao = {
    ["裁决之杖"] = {"裁决之杖2","裁决之杖3","裁决之杖4"},
    ["骨玉权杖"] = {"骨玉权杖2","骨玉权杖3","骨玉权杖4"},
    ["龙纹剑"] = {"龙纹剑2","龙纹剑3","龙纹剑4"},
    ["命运之刃道35"] = {"命运之刃91","命运之刃92","命运之刃93"},
    ["命运之刃法35"] = {"命运之刃81","命运之刃82","命运之刃83"},
    ["命运之刃战35"] = {"命运之刃71","命运之刃72","命运之刃73"},
    ["命运之刃道30"] = {"命运之刃61","命运之刃62","命运之刃63"},
    ["命运之刃法30"] = {"命运之刃51","命运之刃52","命运之刃53"},
    ["命运之刃战30"] = {"命运之刃41","命运之刃42","命运之刃43"},
    ["命运之刃法25"] = {"命运之刃31","命运之刃32","命运之刃33"},
    ["命运之刃道25"] = {"命运之刃21","命运之刃22","命运之刃23"},
    ["命运之刃战25"] = {"命运之刃11","命运之刃12","命运之刃13"}
}

function CForgeMgr:DoForgeWeapon(strPlayer, strWeapon, tVar)
    local cishu = lualib:GetInt(strWeapon,"qhcs")
    local job = lualib:Job(strPlayer)
    local gender = lualib:Gender(strPlayer)
    local keyname = lualib:KeyName(strWeapon)
    local sxm = lualib:GetInt(strWeapon,"_da50")
    local sxm1 = lualib:GetInt(strWeapon,"_da51")
    local sxm2 = lualib:GetInt(strWeapon,"_da52")
    local sxz = lualib:GetInt(strWeapon,"_dv50")
    local sxz1 = lualib:GetInt(strWeapon,"_dv51")
    local sxz2 = lualib:GetInt(strWeapon,"_dv52")
    if lualib:GetBagFree(strPlayer) <= 0 then
        lualib:MsgBox(strPlayer,"请先清理背包再开锋！")
        return DoForgeWeapon(strPlayer, strWeapon, tVar)
    end
    if tVar.ItemVar.ForgeFlag == 1 then					--如果升级成功?
        local tAttrPair = {};
        local bExist = false;
        lualib:SetInt(strWeapon,"shengji",tVar.ItemVar.ForgeLevel)
        lualib:SetInt(strWeapon,"qianghuadengji",lualib:GetInt(strWeapon,"qianghuadengji")+1)
        local oldqiangh = lualib:GetInt(strWeapon,"qianghuadengji")
        local oldshengj = lualib:GetInt(strWeapon,"shengji")
        if wuqi_tb[keyname] ~= nil then
            if oldqiangh == wuqi_tb[keyname][3] then
                local oldxinyun = lualib:Equip_GetLuckCurse("",strWeapon)
                local oldnaijiu = lualib:Item_GetDurability("",strWeapon)
                for i = 0,5 do
                    local ttAttrPair = lualib:Equip_GetQualProp("", strWeapon, i)
                    local s = {}
                    if ttAttrPair[1] ~= nil then
                        for i, v in pairs(ttAttrPair) do
                            table.insert(s,v)
                        end
                    end

                    table.insert(tAttrPair,s)
                end
                lualib:Item_Destroy("", strWeapon, "武器升级流化物器为json", "武器升级NPC")
                lualib:AddItem(strPlayer,wuqi_tb[keyname][4],1,false,"武器升级NPC","武器升级NPC")
                local guid_item = lualib:GetItemsByKeys(strPlayer,wuqi_tb[keyname][4],true,true,false,false)
                local xin_guid = ""
                local xinqiangh = lualib:GetInt(xin_guid,"qianghuadengji")
                local xinshengj = lualib:GetInt(xin_guid,"shengji")
                xinqiangh = oldqiangh
                xinshengj = oldshengj
                if guid_item ~= "" then
                    for i = 1, #guid_item do
                        xin_guid = guid_item[i]
                    end
                    lualib:Equip_SetLuckCurse("",xin_guid,oldxinyun)
                    lualib:Item_SetDurability("",xin_guid,oldnaijiu)
                    --先遍历极品属性
                    for i, v in pairs(tAttrPair) do
                        lualib:SetInt(xin_guid,"qhcs",cishu+1)
                        local num = i-1
                        local sss = CForgeMgr:GetForgeVar(xin_guid)
                        CForgeMgr:SetForgeVar(xin_guid,sss)
                        sss = CForgeMgr:GetForgeVar(xin_guid)
                        sss.ItemVar.ForgeLevel = oldshengj + 1
                        CForgeMgr:SetForgeVar(xin_guid,sss)
                        assert(lualib:Equip_SetQualProp("", xin_guid, num, v[2], v[1] + tVar.ItemVar.ForgeAttrValue), "系统错误设置极品属性失败!");
                    end
                end
                tVar.ItemVar.ForgeAttrName = 0;
                tVar.ItemVar.ForgeAttrValue = 0;
                tVar.ItemVar.ForgeDurability = 0;
                --完成开锋流程
                tVar.ItemVar.ForgeFlag = 0;
                tVar.ItemFlag = 0;
                lualib:SetInt(xin_guid,"qianghuadengji",xinqiangh)
                lualib:SetInt(xin_guid,"shengji",xinshengj)
                lualib:SetInt(xin_guid,"_da50",sxm)
                lualib:SetInt(xin_guid,"_da51",sxm1)
                lualib:SetInt(xin_guid,"_da52",sxm2)
                lualib:SetInt(xin_guid,"_dv50",sxz)
                lualib:SetInt(xin_guid,"_dv51",sxz1)
                lualib:SetInt(xin_guid,"_dv52",sxz2)
                lualib:Item_NotifyUpdate(strPlayer, xin_guid);
                lualib:ApplyEquipEx(strPlayer,wuqi_tb[keyname][4])
                lualib:SysMsg_SendWarnMsg(strPlayer, "恭喜你,你的武器升级成功了!");
                return
            end
        end--先遍历极品属性
        for i = 0, 5 do
            tAttrPair = lualib:Equip_GetQualProp("", strWeapon, i);
            assert(tAttrPair[0] and tAttrPair[1], "系统错误,程序有BUG.");
            --如果对应的极品属性存在,则修改
            if tVar.ItemVar.ForgeAttrName == tAttrPair[0] then
                lualib:SetInt(strWeapon,"qhcs",cishu+1)
                bExist = true;
                assert(lualib:Equip_SetQualProp("", strWeapon, i, tAttrPair[0], tAttrPair[1] + tVar.ItemVar.ForgeAttrValue), "系统错误设置极品属性失败!");
                break;
            end
        end

        if not bExist then								--如果对应的极品属性不存在,则设置一条极品属性
            for i = 0, 5 do
                tAttrPair = lualib:Equip_GetQualProp("", strWeapon, i);
                assert(tAttrPair[0] and tAttrPair[1], "系统错误,程序有BUG.");

                if tAttrPair[0] == 0 then
                    lualib:SetInt(strWeapon,"qhcs",cishu+1)
                    assert(lualib:Equip_SetQualProp("", strWeapon, i, tVar.ItemVar.ForgeAttrName, tVar.ItemVar.ForgeAttrValue), "系统错误,设置极品属性失败!");
                    break;
                end
            end
        end

        tVar.ItemVar.ForgeAttrName = 0;
        tVar.ItemVar.ForgeAttrValue = 0;

        --再修正耐久
        assert(lualib:Item_SetDurability("", strWeapon, tVar.ItemVar.ForgeDurability), "系统错误,设置耐久失败!");

        --再修正名字
        lualib:Item_ChangeName("", 	strWeapon, string.sub(lualib:Name(strWeapon), 4));

        tVar.ItemVar.ForgeDurability = 0;

        --完成开锋流程
        tVar.ItemVar.ForgeFlag = 0;
        tVar.ItemFlag = 0;
        lualib:Item_NotifyUpdate(strPlayer, strWeapon);
        lualib:SysMsg_SendWarnMsg(strPlayer, "恭喜你,你的武器升级成功了!");
    elseif tVar.ItemVar.ForgeFlag == 0 then			--失败
        tVar.ItemVar.ForgeLevel = tVar.ItemVar.ForgeLevel + 1
        tVar.ItemFlag = 1
        lualib:SetInt(strWeapon,"qhcs",cishu+1)
        lualib:Item_ChangeName("", 	strWeapon, string.sub(lualib:Name(strWeapon), 4));
        lualib:Item_NotifyUpdate(strPlayer, strWeapon);
        lualib:SysMsg_SendWarnMsg(strPlayer, "很遗憾,你的武器升级失败了!");
    else
        assert(false, "系统错误,数据异常!");
    end
end

function CForgeMgr:GetAllOre(strPlayer)				--找矿石
    local tRule = tForgeRule; 						--规则表放在栈里,提升读取效率
    local tOre = lualib:ItemsByType(strPlayer, tRule.PayOre.Type, tRule.PayOre.SubType, false,
            true, false, false);						--先用矿石的类型子类型限定一个范围提升效率

    local dwPuritys = 0;
    local t = 0;
    for i = #tOre, 1, -1 do							--再确认是不是想要的矿石
        t = tRule.PayOre.Puritys[lualib:KeyName(tOre[i])]
        if nil == t then
            table.remove(tOre, i);
        else
            dwPuritys = dwPuritys + t;
        end
    end

    if #tOre == 0 then
        return nil, nil;
    end

    return tOre, dwPuritys;
end

function CForgeMgr:GetAllOrnament(strPlayer)
    local tRule = tForgeRule;
    local tItems = nil;								--找首饰
    local tDataRow = nil;
    local strKeyName = "";
    local tOrnament = {};
    local tForgeAttrs = {		  					--升级属性定义
        {Name = 10, Value = 0, Str = "MaxPhyAtk", Ch = "物攻"}, --物攻
        {Name = 12, Value = 0, Str = "MaxMagAtk", Ch = "魔攻"}, --魔攻
        {Name = 14, Value = 0, Str = "MaxTaoAtk", Ch = "道攻"}  --道攻
    };


    for i = 1, #tRule.PayItem.Types do				--依次遍历包裹所有首饰
        tItems = lualib:ItemsByType(strPlayer, tRule.PayItem.Types[i], tRule.PayItem.SubTypes[i], false,
                true, false, false);

        for k = 1, #tItems do 						--迭代累加攻击属性
            local strItem = tItems[k];
            tDataRow = lualib:Item_DataRow(lualib:KeyName(strItem));

            tForgeAttrs[1].Value = tForgeAttrs[1].Value + tDataRow.MaxPhyAtk;
            tForgeAttrs[2].Value = tForgeAttrs[2].Value + tDataRow.MaxMagAtk;
            tForgeAttrs[3].Value = tForgeAttrs[3].Value + tDataRow.MaxTaoAtk;

            table.insert(tOrnament, strItem);
        end
    end

    if tDataRow == nil then							--没有首饰就返回
        return nil, nil, nil, nil, nil;
    end

    --排序表找出最大的那个属性值
    table.sort(tForgeAttrs, function (lhs, rhs)
        return lhs.Value > rhs.Value;
    end);

    return tOrnament, tForgeAttrs[1].Name, tForgeAttrs[1].Value, tForgeAttrs[1].Str, tForgeAttrs[1].Ch;
end

function CForgeMgr:GetForgeAttr(strWeaponKey, strAttrName, dwForgeLevel)
    local tRule = tForgeRule;

    --判断属性基准值 暂定公式:最终最大总和 = (装备最大攻击 * AttrRate) + 升级次数;
    return math.floor((lualib:Item_DataRow(strWeaponKey)[strAttrName] * tRule.PayItem.AttrRate + dwForgeLevel * 100) / 100);
end

function CForgeMgr:GetForgeRate(dwPuritys, dwForgeLevel)
    local tRule = tForgeRule;

    local dwCurRate = tRule.ForgeItem.ForgeRate[dwForgeLevel];
    --判断强化概率 暂定公式:最终成功概率 = 当前成功率概 + (当前成功率概 * (当前纯度 / (DurabilityRate * 升级次数)) / 10);
    local item_flag = 0
    item_flag = lualib:GetInt(use_player,"item_up_flag")
    if item_flag == 0 then
        --lualib:SysMsg_SendBroadcastMsg(tostring("不必成"), "1")
        --lualib:SetInt(use_player,"item_up_flag",0)
        return math.floor(dwCurRate + (dwCurRate * (dwPuritys / (tRule.PayOre.DurabilityRate * dwForgeLevel)) / 10));
    else
        --lualib:SysMsg_SendBroadcastMsg(tostring("必成"), "1")
        --lualib:SetInt(use_player,"item_up_flag",0)
        return 10400
    end
end

function CForgeMgr:GetForgeDura(strWeapon, dwPuritys, dwForgeLevel)
    local tRule = tForgeRule;

    --判断耐久比率 暂定公式:最终当前耐久 = 当前耐久 * (当前纯度 / (DurabilityRate * 升级次数));
    return math.floor(lualib:Item_GetDurability("", strWeapon) * (dwPuritys / (tRule.PayOre.DurabilityRate * dwForgeLevel)));
end

function CForgeMgr:SetForgeAttr(tVar, tOre, tOrnament, dwForgeRate, dwForgeLevel, dwAttrName, dwDurability)
    local tRule = tForgeRule;

    tVar.ItemFlag = 1;									--初始化升级标记,表明开始物品升级流程
    if lualib:GenRandom(1, 10000) < dwForgeRate then	--升级物品,这时就可以决定成功还是失败了.但是结果等玩家攻击后再揭晓
        tVar.ItemVar.ForgeLevel = dwForgeLevel + 1;
        tVar.ItemVar.ForgeFlag = 1;						--成功,要增加的属性名与属性值
        tVar.ItemVar.ForgeAttrName = dwAttrName;
        tVar.ItemVar.ForgeAttrValue = tRule.ForgeItem.ForgeInc;
        tVar.ItemVar.ForgeDurability = dwDurability;
    else
        tVar.ItemVar.ForgeLevel = dwForgeLevel + 1;		--升级次数加1
        tVar.ItemVar.ForgeFlag = 0;						--失败
        tVar.ItemVar.ForgeAttrName = 0;
        tVar.ItemVar.ForgeAttrValue = 0;
        tVar.ItemVar.ForgeDurability = 0;
    end

    for i = 1, #tOre do									--不管升级成功还是失败,确认之后这些物品全都要删除
        table.insert(tVar.ItemVar.ForgeItems, tOre[i]);
    end

    for i = 1, #tOrnament do
        table.insert(tVar.ItemVar.ForgeItems, tOrnament[i]);
    end
end

function CForgeMgr:UpdateForgeAttr(tVar)
    tVar.ItemFlag = 2;
end

function CForgeMgr:ResetForgeAttr(tVar)
    tVar.ItemFlag = 0;

    tVar.ItemVar.ForgeFlag = 0;
    tVar.ItemVar.ForgeLevel = tVar.ItemVar.ForgeLevel - 1;
    tVar.ItemVar.ForgeAttrName = 0;
    tVar.ItemVar.ForgeAttrValue = 0;
    tVar.ItemVar.ForgeItems = {};
end

function CForgeMgr:GetForgeVar(strItem)
    local tVar = lualib:GetStr(strItem, "tForgeVar");
    if tVar == "" then
        return tForgeVar;
    else
        tVar = json.decode(tVar);
        return tVar;
    end
end

function CForgeMgr:SetForgeVar(strItem, tVar)
    lualib:SetStr(strItem, "tForgeVar", json.encode(tVar));
end

-------------------------------------------------------------------------------

--**注意事项**
--**因于该脚本的需求对触发器要求很高,为了避免服务器卡机,服务器底层做出如下调整:
--**装备位上的物品可以触发on_spll触发器(物品可以添加这个触发器)
--**注意事项**

function main(strNpc, strPlayer)
    OnWatchWeapon(strPlayer)
    local i = "2"
    local str = "yin =".."\"武器店男"..i.."\""
    lualib:ShowFormWithContent(strPlayer, "脚本表单", str)
    lualib:ShowFormWithContent(strPlayer, "form文件表单", "音频")
    local strMsg = "\n\n    我可以帮你将武器升级!\n\n";
    strMsg = strMsg.."    #OFFSET<X:0,Y:2>##IMAGE1902700039#<@ForgeBegin *01* 武器升级>           #OFFSET<X:0,Y:2>##IMAGE1902700018#<@Award *01* 领回武器>\n\n    #OFFSET<X:0,Y:2>##IMAGE1902700016#<@jieshao *01* 武器升级介绍>       #OFFSET<X:0,Y:2>##IMAGE1902700017#<@tingge *01* 武器升级重置>\n\n    #OFFSET<X:0,Y:2>##IMAGE1902700014#<@Leave *01* [离  开]>";
    --strMsg = strMsg.." <@gei *01*给>"
    use_player = strPlayer
    return strMsg;
end

function gei(strNpc,strPlayer)
    lualib:AddItem(strPlayer,"黑铁矿石15",5,false,"","")
    lualib:AddItem(strPlayer,"紫碧螺",5,false,"","")
    return ""
end

--[[function huan(npc,player)
	local weapon = lualib:Weapon(player)
	local weapon_name = lualib:Name(weapon)
	local qiege = string.split(weapon_name, "(*)")
	if weapon == nil then
		return "请先装备武器！"
	end

	if qiege[1] ~= nil then
		lualib:Item_ChangeName("", weapon, qiege[2]);
		lualib:MsgBox(player,"更新成功")
		return ""
	else
		lualib:MsgBox(player,"没有可更新武器！")
		return ""
	end
	return ""
end--]]

function tingge(strNpc, strPlayer)
    local strWeapon, strWeaponKey = CForgeMgr:GetWeapon(strPlayer);
    local tVar = CForgeMgr:GetForgeVar(strWeapon);
    local cishu = tVar.ItemVar.ForgeLevel
    if tVar.ItemFlag == 1 then
        cishu = cishu - 1
    end
    local strMsg = "#COLORCOLOR_ORANGE#当前武器升级次数："..cishu.."#COLOREND#\n"
    strMsg = strMsg.."#COLORCOLOR_ORANGE#重置需要1W元宝的手续费！#COLOREND#\n"
    strMsg = strMsg.."#COLORCOLOR_ORANGE#重置后武器的升级次数及所有极品属性将清空！#COLOREND#\n"
    strMsg = strMsg.."#COLORCOLOR_ORANGE#重置后的武器可以重新升级7次#COLOREND#\n\n"
    strMsg = strMsg.."<@chongzhi *01* 「确定重置」>      <@main *01* 「返  回」>      <@Leave *01* 「离  开」>"
    return strMsg
end

function chongzhi(strNpc,strPlayer)
    local msg = "\n"
    msg = msg.."     #COLORCOLOR_RED#重置属性会把所有属性全部清空只保留最基础的属性，\n     并且需要1W元宝哦，您确定要重置属性么？#COLOREND#\n\n"
    msg = msg.."             <@queding *01*确定>                 <@sansi *01*在考虑一下>\n"
    return msg
end

function queding(strNpc,strPlayer)

    local strWeapon, strWeaponKey = CForgeMgr:GetWeapon(strPlayer);
    local tVar = CForgeMgr:GetForgeVar(strWeapon);
    local dwForgeLevel = tVar.ItemVar.ForgeLevel;

    if not lualib:Player_IsIngotEnough(strPlayer,10000,false) then
        return "您的元宝不足！"
    end
    if strWeapon ~= "" then
        lualib:Item_Destroy("",strWeapon,"武器强化重置","武器强化重置")
    else
        return "请把需要重置的武器戴在身上"
    end
    CForgeMgr:ResetForgeAttr(tVar);
    local name = strWeaponKey
    for i, v in pairs(xunzhao) do
        for j, k in pairs(v) do
            if k == strWeaponKey then
                name = i
                break
            end
        end
    end
    lualib:Player_SubIngot(strPlayer,10000,false,"重置武器强化","重置武器强化")
    lualib:AddItem(strPlayer,name,1,false,"武器强化重置给予","武器强化重置给予")
    lualib:MsgBox(strPlayer,"恭喜您，重置成功！")
    return ""
end

function jieshao(strNpc, strPlayer)
    local msg = "\n#COLORCOLOR_GREENG#升级材料：黑铁矿石、对应的首饰、一把武器(必须拿在手中)！\n"
    msg = msg.."#COLORCOLOR_YELLOW#升级技巧：黑铁矿石纯度越高升级成功机率越大！\n"
    msg = msg.."#COLORCOLOR_RED#升级需求：每次升级需要#COLORCOLOR_YELLOW#10万#COLORCOLOR_RED#金币！\n"
    msg = msg.."#COLORCOLOR_RED#升级次数：每把武器最多可升级7次，成功则属性+1，失败只加升级次数，武器不会破碎！\n"
    msg = msg.."#COLORCOLOR_SKYBLUE#升级特效：当武器成功升级3次5次7次时，会绽放不同的光芒哦！#COLOREND#\n"
    msg = msg.."#COLORCOLOR_SKYBLUE#升级时间：20分钟之后取回升级的武器！#COLOREND#\n\n"
    msg = msg.."    <@main *01* 「返  回」>                  <@Leave *01* 「离  开」>"
    return msg
end

function ForgeBegin(strNpc, strPlayer)
    if CForgeMgr:IsBegin(strPlayer) then
        return "\n    你之前交给我的订单还未完成哦,武器正在升级中...\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    local strWeapon, strWeaponKey = CForgeMgr:GetWeapon(strPlayer);
    if strWeapon == "" or strWeaponKey == "" then
        return "\n    先将要升级的武器装备起来...\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    local tOre, dwPuritys = CForgeMgr:GetAllOre(strPlayer);
    if nil == tOre or nil == dwPuritys then
        return "\n    没有黑铁石,请恕我无能为力...\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    local tOrnament, dwAttrName, dwAttrValue, strAttrName, strChName = CForgeMgr:GetAllOrnament(strPlayer);
    if nil == tOrnament or nil == dwAttrName or nil == dwAttrValue or nil == strAttrName or strChName == nil then
        return "\n    没有提供首饰,请恕我无能为力...\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    local tVar = CForgeMgr:GetForgeVar(strWeapon);

    if tVar.ItemFlag == 1 then
        CForgeMgr:ResetForgeAttr(tVar);
        CForgeMgr:SetForgeVar(strWeapon, tVar);
    elseif tVar.ItemFlag == 2 then
        return "\n    你的武器未开锋,请恕我无能为力...\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    if tVar.ItemVar.ForgeLevel >= 8 then
        return "强化次数已达上限！...\n\n  <@main *01* 「返  回」>    <@Leave *01* 「离  开」>"
    end
    local dwForgeLevel = tVar.ItemVar.ForgeLevel;

    local dwForgeAttrValue = CForgeMgr:GetForgeAttr(strWeaponKey, strAttrName, dwForgeLevel);
    if dwAttrValue < dwForgeAttrValue then
        return "\n    首饰提供的属性加成不足,需要首饰"..strChName.."上限总计达到"..dwForgeAttrValue.."才能继续...\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    local dwDurability = CForgeMgr:GetForgeDura(strWeapon, dwPuritys, dwForgeLevel);
    if dwDurability < 1000 then
        return "\n黑铁提供的纯度不足,物品无法打造...\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    local dwForgeRate = CForgeMgr:GetForgeRate(dwPuritys, dwForgeLevel);
    CForgeMgr:SetForgeAttr(tVar, tOre, tOrnament, dwForgeRate, dwForgeLevel, dwAttrName, dwDurability);


    --保存升级信息在物品变量中
    CForgeMgr:SetForgeVar(strWeapon, tVar);

    return "\n  升级成功后次数为:"..(dwForgeLevel).."\n\n  黑铁矿石的纯度越高成功机率也越高,确定要升级吗?\n\n  #COLORCOLOR_SKYBLUE#注意#COLOREND#清理你包裹内贵重的首饰，一旦被我收了可是不还地。\n\n  <@ForgeEnd#"..strWeapon.." *01* 「确  定」>    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";

end

function ForgeEnd(strNpc, strPlayer, strWeaponOld)
    if CForgeMgr:IsBegin(strPlayer) then
        return "\n  你之前交给我的订单还未完成哦,武器正在升级中...\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    local strWeapon, strWeaponKey = CForgeMgr:GetWeapon(strPlayer);
    if strWeapon == "" or strWeaponKey == "" then
        return "\n  先将要升级的武器装备起来...\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    local tVar = CForgeMgr:GetForgeVar(strWeapon);
    if tVar.ItemFlag ~= 1 or strWeapon ~= strWeaponOld then
        return "\n  哈哈,你偷偷更换武器了吧,年轻人你还嫩了点!\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end


    --先判断钱够不够
    if not CForgeMgr:IsGoldEnough(strPlayer) then
        return "\n      我帮不了你,你懂的(金币3W)...\n\n      我也要养家糊口啊，大哥\n\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    --上交吧,交税了!!!
    if not CForgeMgr:DestroyForgeItem(strPlayer, tVar) then
        return "\n  哈哈,你的升级材料是不是转移走了?你瞒不过我的(放仓库里也会找出来)!为了惩罚你,你前面上缴的物品我也不会退给你了!\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    --扣钱
    assert(CForgeMgr:SubGold(strPlayer), "系统错误,钱不可能扣失败!");

    CForgeMgr:UpdateForgeAttr(tVar);			--更新升级信息
    CForgeMgr:SetForgeVar(strWeapon, tVar);		--保存

    CForgeMgr:SetWeapon(strPlayer, CForgeMgr:ForgeWeapon(strPlayer, strWeapon)); --更新物品信息到玩家身上

    return "\n  升级处理中,请20分钟后再来领取!\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
end

function Award(strNpc, strPlayer)
    if not CForgeMgr:IsBegin(strPlayer) then
        return "\n  你没有委托我升级过武器...\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    local dwRemain = CForgeMgr:GetRemain(strPlayer);
    if dwRemain > 0 then
        return "\n  升级将在"..math.floor(dwRemain / 60).."分钟"..math.fmod(dwRemain, 60).."秒以后完成,请耐心等待吧.\n\n\n\n  <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    if lualib:BagFree(strPlayer, true, false, false) < 1 then
        return "\n  你的包包都满了,该怎么放武器呢?\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
    end

    local strWeapon = CForgeMgr:MakeWeapon(strPlayer);
    CForgeMgr:ClearWeapon(strPlayer);		--清除玩家身上升级相关的变量
    lualib:SetInt(strPlayer,"item_up_flag",0)
    if lualib:HasBuff(strPlayer,"沃玛套装战15") then
        lualib:DelBuff(strPlayer,"沃玛套装战15")
    end
    OnWatchWeapon(strPlayer)
    return "\n  领取成功!\n\n    <@main *01* 「返  回」>    <@Leave *01* 「离  开」>";
end

function Leave(strNpc, strPlayer)
    return "";
end

-------------------------------------------------------------------------------

function OnPostEquip(strPlayer, strEquip, ...)
    CForgeMgr:OnPostEquip(strPlayer, strEquip);
end

function OnPostUnEquip(strPlayer, strEquip, ...)
    CForgeMgr:OnPostUnEquip(strPlayer, strEquip);
end

function OnSpell(strPlayer, wSkillID,strSkillName)
    if strSkillName == "普通物理攻击" then
        CForgeMgr:OnSpell(strPlayer);
    end
end

function OnWatchWeapon(strPlayer)
    CForgeMgr:WatchWeapon(strPlayer);
end